name: autobuild

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

jobs:
  windows-build:
    name: Windows build
    runs-on: windows-2019

    env:
      BUILD_DIR: '${{ github.workspace }}\build'
      CMAKE_BUILD_PARALLEL_LEVEL: 2
      CGAL_VERSION: CGAL-5.0.4
      VCPKG_DEFAULT_BINARY_CACHE: '${{ github.workspace }}\bin-cache'

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: '0'
      
      - name: Create vcpkg binary cache
        run: New-Item -ItemType Directory ${{ env.VCPKG_DEFAULT_BINARY_CACHE }} 

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          additionalCachedPaths: ${{ github.workspace }}/vcpkg_installed;${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - name: Download binary CGAL 5.0
        run: |
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/CGAL/cgal/releases/download/v5.0.4/${{ env.CGAL_VERSION }}-library.zip", "${{ env.CGAL_VERSION }}-library.zip")
          Expand-Archive ./${{ env.CGAL_VERSION }}-library.zip -DestinationPath ..
          ls ../${{ env.CGAL_VERSION }}/lib/cmake/CGAL

      - name: Install dependencies
        run: |
         ./vcpkg/vcpkg.exe install yasm-tool:x86-window --clean-after-build
         ./vcpkg/vcpkg.exe install --triplet x64-windows --clean-after-build

      - name: Configure project
        run: cmake -G'Visual Studio 16 2019' -A x64 -DCGAL_DIR="${{ github.workspace }}/../${{ env.CGAL_VERSION }}/lib/cmake/CGAL" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="./vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET="x64-windows" -S . -B ${{ env.BUILD_DIR }}
      
      - name: Build project
        run: cmake --build ${{ env.BUILD_DIR }}
  
  linux-build:
    name: Linux build
    runs-on: ubuntu-20.04

    env:
      BUILD_DIR: '${{ github.workspace }}/build'
      CMAKE_BUILD_PARALLEL_LEVEL: 2
      VCPKG_DEFAULT_BINARY_CACHE: '${{ github.workspace }}/bin-cache'

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: '0'

      - name: Create vcpkg binary cache
        run: mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }} 

      - name: Install OpenGL and CGAL
        run: |
          sudo apt update
          sudo apt install -y freeglut3-dev libxt-dev libcgal-dev ninja-build

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          additionalCachedPaths: ${{ github.workspace }}/vcpkg_installed;${{ env.VCPKG_DEFAULT_BINARY_CACHE }}

      - name: Install dependencies
        run: ./vcpkg/vcpkg install --triplet x64-linux --clean-after-build

      - name: Configure project
        run: cmake -G'Ninja' -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="./vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET="x64-linux" -S . -B ${{ env.BUILD_DIR }}

      - name: Build project
        run: cmake --build ${{ env.BUILD_DIR }}
